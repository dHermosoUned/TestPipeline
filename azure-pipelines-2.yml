# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

steps:
- script: echo Hello, world!
  displayName: 'Run a one-line script'

- script: |
    echo Build.BuildId: $(Build.BuildId)
    echo Build.BuildNumber: $(Build.BuildNumber)
    echo Build.BuildUri: $(Build.BuildUri)
    echo Build.BinariesDirectory: $(Build.BinariesDirectory)
    echo Build.ContainerId: $(Build.ContainerId)
    echo Build.CronSchedule.DisplayName: $(Build.CronSchedule.DisplayName)
    echo Build.DefinitionName: $(Build.DefinitionName)
    echo Build.DefinitionVersion: $(Build.DefinitionVersion)
    echo Build.QueuedBy: $(Build.QueuedBy)
    echo Build.QueuedById: $(Build.QueuedById)
    echo Build.Reason: $(Build.Reason)
    echo Build.Repository.Clean: $(Build.Repository.Clean)
    echo Build.Repository.LocalPath: $(Build.Repository.LocalPath)
    echo Build.Repository.ID: $(Build.Repository.ID)
    echo Build.Repository.Name: $(Build.Repository.Name)
    echo Build.Repository.Provider: $(Build.Repository.Provider)
    echo Build.Repository.Tfvc.Workspace: $(Build.Repository.Tfvc.Workspace)
    echo Build.Repository.Uri: $(Build.Repository.Uri)
    echo Build.RequestedFor: $(Build.RequestedFor)
    echo Build.RequestedForEmail: $(Build.RequestedForEmail)
    echo Build.RequestedForId: $(Build.RequestedForId)
    echo Build.SourceBranch: $(Build.SourceBranch)
    echo Build.SourceBranchName: $(Build.SourceBranchName)
    echo Build.SourcesDirectory: $(Build.SourcesDirectory)
    echo Build.SourceVersion: $(Build.SourceVersion)
    echo Build.SourceVersionMessage: $(Build.SourceVersionMessage)
    echo Build.StagingDirectory: $(Build.StagingDirectory)
    echo Build.Repository.Git.SubmoduleCheckout: $(Build.Repository.Git.SubmoduleCheckout)
    echo Build.SourceTfvcShelveset: $(Build.SourceTfvcShelveset)
    echo Build.TriggeredBy.BuildId: $(Build.TriggeredBy.BuildId)
    echo Build.TriggeredBy.DefinitionId: $(Build.TriggeredBy.DefinitionId)
    echo Build.TriggeredBy.DefinitionName: $(Build.TriggeredBy.DefinitionName)
    echo Build.TriggeredBy.BuildNumber: $(Build.TriggeredBy.BuildNumber)
    echo Build.TriggeredBy.ProjectID: $(Build.TriggeredBy.ProjectID)
    echo Common.TestResultsDirectory: $(Common.TestResultsDirectory)
  displayName: 'All the available variables'
