# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

steps:
- script: echo Hello, world!
  displayName: 'Run a one-line script'

- script: |
    echo $(Build.BuildId)
    echo $(Build.BuildNumber)
    echo $(Build.BuildUri)
    echo $(Build.BinariesDirectory)
    echo $(Build.ContainerId)
    echo $(Build.CronSchedule.DisplayName)
    echo $(Build.DefinitionName)
    echo $(Build.DefinitionVersion)
    echo $(Build.QueuedBy)
    echo $(Build.QueuedById)
    echo $(Build.Reason)
    echo $(Build.Repository.Clean)
    echo $(Build.Repository.LocalPath)
    echo $(Build.Repository.ID)
    echo $(Build.Repository.Name)
    echo $(Build.Repository.Provider)
    echo $(Build.Repository.Tfvc.Workspace)
    echo $(Build.Repository.Uri)
    echo $(Build.RequestedFor)
    echo $(Build.RequestedForEmail)
    echo $(Build.RequestedForId)
    echo $(Build.SourceBranch)
    echo $(Build.SourceBranchName)
    echo $(Build.SourcesDirectory)
    echo $(Build.SourceVersion)
    echo $(Build.SourceVersionMessage)
    echo $(Build.StagingDirectory)
    echo $(Build.Repository.Git.SubmoduleCheckout)
    echo $(Build.SourceTfvcShelveset)
    echo $(Build.TriggeredBy.BuildId)
    echo $(Build.TriggeredBy.DefinitionId)
    echo $(Build.TriggeredBy.DefinitionName)
    echo $(Build.TriggeredBy.BuildNumber)
    echo $(Build.TriggeredBy.ProjectID)
    echo $(Common.TestResultsDirectory)

    echo See https://aka.ms/yaml
  displayName: 'Run a multi-line script'
